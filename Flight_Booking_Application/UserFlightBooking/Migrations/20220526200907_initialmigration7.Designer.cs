// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserFlightBooking.Repository;

namespace UserFlightBooking.Migrations
{
    [DbContext(typeof(FlightBookAppDBContext))]
    [Migration("20220526200907_initialmigration7")]
    partial class initialmigration7
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ManageAirliness.Model.Airlines", b =>
                {
                    b.Property<int>("AirlinesId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AirlineAddress");

                    b.Property<int>("AirlineContactNumber");

                    b.Property<string>("AirlineName");

                    b.HasKey("AirlinesId");

                    b.ToTable("Airlines");
                });

            modelBuilder.Entity("UserFlightBooking.Model.FlightBooking", b =>
                {
                    b.Property<int>("FlightBookingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AirlineDetailsAirlinesId");

                    b.Property<string>("MealOpted");

                    b.Property<string>("NoofSelctedSeats");

                    b.Property<int?>("UserdetailsUserId");

                    b.HasKey("FlightBookingId");

                    b.HasIndex("AirlineDetailsAirlinesId");

                    b.HasIndex("UserdetailsUserId");

                    b.ToTable("FlightBookingDetailssql");
                });

            modelBuilder.Entity("UserFlightBooking.Model.PassengerDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<int?>("FlightBookingId");

                    b.Property<string>("Gender");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("FlightBookingId");

                    b.ToTable("PassengerDetailssql");
                });

            modelBuilder.Entity("UserManagement.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<int>("ContactNumber");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("UserFlightBooking.Model.FlightBooking", b =>
                {
                    b.HasOne("ManageAirliness.Model.Airlines", "AirlineDetails")
                        .WithMany()
                        .HasForeignKey("AirlineDetailsAirlinesId");

                    b.HasOne("UserManagement.Model.User", "Userdetails")
                        .WithMany()
                        .HasForeignKey("UserdetailsUserId");
                });

            modelBuilder.Entity("UserFlightBooking.Model.PassengerDetails", b =>
                {
                    b.HasOne("UserFlightBooking.Model.FlightBooking")
                        .WithMany("Passengers")
                        .HasForeignKey("FlightBookingId");
                });
#pragma warning restore 612, 618
        }
    }
}
